<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.giggalpeople.backoffice.api.log.database.mapper.LogManagementMapper">
    <!-- Exception Log Level 저장 -->
    <insert id="errorLogLevelSave" parameterType="com.giggalpeople.backoffice.api.log.model.vo.LogLevelVo"
            useGeneratedKeys="true" keyProperty="logLevelID">
        INSERT INTO log_level (LOG_LEVEL_ID, LEVEL)
        VALUES (#{logLevelID}, #{level})
    </insert>

    <!-- Exception Log 저장 -->
    <insert id="save" parameterType="com.giggalpeople.backoffice.api.log.model.vo.LogVo" useGeneratedKeys="true"
            keyProperty="logId">
        INSERT INTO log (LOG_ID,
                         INTERNAL_SERVER_ID,
                         DATA_CREATED_DATE_TIME_ID,
                         CONNECTED_USER_ID,
                         CONNECTED_USER_REQUEST_INFO_ID,
                         LOG_LEVEL_ID,
                         EXCEPTION_BRIEF,
                         EXCEPTION_DETAIL)
        VALUES (#{logId},
                #{internalServerID},
                #{dataCreatedDateTimeID},
                #{connectedUserID},
                #{connectedUserRequestInfoID},
                #{logLevelID},
                #{exceptionBrief},
                #{exceptionDetail})
    </insert>

    <!-- Error Log 모든 정보(이용자 정보, 이용자 요청 정보, 서버 정보, Error Log 정보) 목록 및 검색 조회 시 조회 개수 찾기 -->
    <select id="totalErrorLogSearchCount" resultType="java.lang.Integer">
        select count(l.log_id)
        from log as l
        inner join connected_user as cu
        on l.connected_user_id = cu.connected_user_id
        inner join data_created_date_time as dcdt
        on l.data_created_date_time_id = dcdt.data_created_date_time_id
        inner join log_level as ll
        on l.log_level_id = ll.log_level_id
        inner join server_info as si
        on l.internal_server_id = si.internal_server_id

        <if test='errorLogSearchDto != null and errorLogSearchDto.searchType != null and errorLogSearchDto.searchType != "" '>
            <choose>
                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_ID'">
                    where l.log_id like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_LEVEL'">
                    where ll.level like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_NAME'">
                    where si.server_name like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_IP'">
                    where si.server_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'USER_IP'">
                    where cu.user_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'EXCEPTION_BRIEF'">
                    where l.exception_brief like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

            </choose>

            <if test='errorLogSearchDto.inDBDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE'">
                        where dcdt.data_created_date like CONCAT('%', #{errorLogSearchDto.inDBDate}, '%')
                    </when>
                </choose>
            </if>

            <if test='errorLogSearchDto.inDBStartDate != null and errorLogSearchDto.inDBEndDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE' ">
                        where dcdt.data_created_date BETWEEN #{errorLogSearchDto.inDBStartDate} AND
                        #{errorLogSearchDto.inDBEndDate}
                    </when>
                </choose>
            </if>
        </if>
    </select>

    <!-- Error Log 목록 및 검색 조회 시 조회 개수가 한 개라면 limit 절을 타지 않기 위해 사용 -->
    <select id="findByErrorLogInfoSearchOneThing"
            resultType="com.giggalpeople.backoffice.api.log.model.vo.LogTotalInfoVo">
        select
        l.log_id,
        dcdt.data_created_date,
        dcdt.data_created_time,
        ll.level,
        si.server_name,
        si.server_environment,
        si.server_ip,
        l.exception_brief

        from log as l
        inner join connected_user as cu
        on l.connected_user_id = cu.connected_user_id
        inner join data_created_date_time as dcdt
        on l.data_created_date_time_id = dcdt.data_created_date_time_id
        inner join log_level as ll
        on l.log_level_id = ll.log_level_id
        inner join server_info as si
        on l.internal_server_id = si.internal_server_id

        <if test='errorLogSearchDto != null and errorLogSearchDto.searchType != null and errorLogSearchDto.searchType != "" '>
            <choose>
                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_ID'">
                    where l.log_id like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_LEVEL'">
                    where ll.level like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_NAME'">
                    where si.server_name like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_IP'">
                    where si.server_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'USER_IP'">
                    where cu.user_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'EXCEPTION_BRIEF'">
                    where l.exception_brief like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

            </choose>

            <if test='errorLogSearchDto.inDBDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE'">
                        where dcdt.data_created_date like CONCAT('%', #{errorLogSearchDto.inDBDate}, '%')
                    </when>
                </choose>
            </if>

            <if test='errorLogSearchDto.inDBStartDate != null and errorLogSearchDto.inDBEndDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE' ">
                        where dcdt.data_created_date BETWEEN #{errorLogSearchDto.inDBStartDate} AND
                        #{errorLogSearchDto.inDBEndDate}
                    </when>
                </choose>
            </if>
        </if>
    </select>

    <!-- Error Log 목록 및 검색 조회 시 조회 개수가 여러 개 일 경우 사용 -->
    <select id="findByErrorLogInfoList" resultType="com.giggalpeople.backoffice.api.log.model.vo.LogTotalInfoVo">
        select
        l.log_id,
        dcdt.data_created_date,
        dcdt.data_created_time,
        ll.level,
        si.server_name,
        si.server_environment,
        si.server_ip,
        l.exception_brief

        from log as l
        inner join connected_user as cu
        on l.connected_user_id = cu.connected_user_id
        inner join data_created_date_time as dcdt
        on l.data_created_date_time_id = dcdt.data_created_date_time_id
        inner join log_level as ll
        on l.log_level_id = ll.log_level_id
        inner join server_info as si
        on l.internal_server_id = si.internal_server_id

        <if test='errorLogSearchDto != null and errorLogSearchDto.searchType != null and errorLogSearchDto.searchType != "" '>
            <choose>
                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_ID'">
                    where l.log_id like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_LEVEL'">
                    where ll.level like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_NAME'">
                    where si.server_name like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'SERVER_IP'">
                    where si.server_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'USER_IP'">
                    where cu.user_ip like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

                <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'EXCEPTION_BRIEF'">
                    where l.exception_brief like CONCAT('%', #{errorLogSearchDto.searchWord}, '%')
                </when>

            </choose>

            <if test='errorLogSearchDto.inDBDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE'">
                        where dcdt.data_created_date like CONCAT('%', #{errorLogSearchDto.inDBDate}, '%')
                    </when>
                </choose>
            </if>

            <if test='errorLogSearchDto.inDBStartDate != null and errorLogSearchDto.inDBEndDate != null '>
                <choose>
                    <when test="errorLogSearchDto.searchType != null and errorLogSearchDto.searchType == 'LOG_CREATE_DATE' ">
                        where dcdt.data_created_date BETWEEN #{errorLogSearchDto.inDBStartDate} AND
                        #{errorLogSearchDto.inDBEndDate}
                    </when>
                </choose>
            </if>
        </if>

        order by l.log_id desc
        <if test='criteria.pageStart != null and criteria.perPageNum != null '>
            limit #{criteria.pageStart}, #{criteria.perPageNum}
        </if>
    </select>
</mapper>