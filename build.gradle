plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //Check Style (Code Convention) Plugins
    id 'checkstyle'
    id 'org.ec4j.editorconfig' version '0.0.3'
    // Gradle 6.0 이상에서 Lombok 사이 호환성 문제로 Build 때, QueryDsl Error 발생을 막기 위한 설정
    // franzbecker는 Lombok Annotation Process를 단순화 하는 Plugin
    id "io.franzbecker.gradle-lombok" version "3.0.0"
    id 'jacoco'
}

jacoco {
    // JaCoCo 버전
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있습니다.
        html.enabled true
        xml.enabled true
        csv.enabled true
        xml.destination = file("${buildDir}/jacoco/jacoco.xml")
    }

    def Qdomains = []
    for (qPattern in '**/QA'..'**/QZ') {
        Qdomains.add(qPattern + '*')
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            "com/giggalpeople/backoffice/GiggalPeopleBackOfficeApplication.class",
                            "com/giggalpeople/backoffice/DiscordBotToken.class",
                            "com/giggalpeople/backoffice/chatops/**",
                            "com/giggalpeople/backoffice/common/**",
                            "com/giggalpeople/backoffice/api/common/constant/**",
                            "com/giggalpeople/backoffice/api/common/model/**",
                            "com/giggalpeople/backoffice/api/common/exception/**",
                            "com/giggalpeople/backoffice/api/config/**",
                            "com/giggalpeople/backoffice/api/crew/exception/**",
                            "com/giggalpeople/backoffice/api/crew/model/**",
                            "com/giggalpeople/backoffice/api/log/exception/**",
                            "com/giggalpeople/backoffice/api/log/model/**",
                            "com/giggalpeople/backoffice/api/server/exception/**",
                            "com/giggalpeople/backoffice/api/server/model/**",
                            "com/giggalpeople/backoffice/api/user/exception/**",
                            "com/giggalpeople/backoffice/api/user/model/**",
                            "com/giggalpeople/backoffice/api/user/request_info/model/**",
                            "com/giggalpeople/backoffice/api/crew/exception/**",
                            "com/giggalpeople/backoffice/api/webhook/**"
                    ] + Qdomains)
                })
        )
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    def Qdomains = []
    for (qPattern in '*.QA'..'*.QZ') {
        Qdomains.add(qPattern + '*')
    }

    violationRules {
        rule {
            element = 'CLASS'
            enabled = true

            // Line 커버리지 제한 30%
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            // 브랜치 커버리지 제한 30%
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            //커버리지를 측정할 때 제외할 클래스를 지정 - 패키지 레벨의 경로로 지정하여야 하고 경로에는 * 과 ?를 사용할 수 있음
            excludes = [
                    "com/giggalpeople/backoffice/GiggalPeopleBackOfficeApplication.class",
                    "com/giggalpeople/backoffice/DiscordBotToken.class",
                    "com/giggalpeople/backoffice/chatops/**",
                    "com/giggalpeople/backoffice/common/**",
                    "com/giggalpeople/backoffice/api/common/constant/**",
                    "com/giggalpeople/backoffice/api/common/model/**",
                    "com/giggalpeople/backoffice/api/common/exception/**",
                    "com/giggalpeople/backoffice/api/config/**",
                    "com/giggalpeople/backoffice/api/crew/exception/**",
                    "com/giggalpeople/backoffice/api/crew/model/**",
                    "com/giggalpeople/backoffice/api/log/exception/**",
                    "com/giggalpeople/backoffice/api/log/model/**",
                    "com/giggalpeople/backoffice/api/server/exception/**",
                    "com/giggalpeople/backoffice/api/server/model/**",
                    "com/giggalpeople/backoffice/api/user/exception/**",
                    "com/giggalpeople/backoffice/api/user/model/**",
                    "com/giggalpeople/backoffice/api/user/request_info/model/**",
                    "com/giggalpeople/backoffice/api/crew/exception/**",
                    "com/giggalpeople/backoffice/api/webhook/**"
            ] + Qdomains
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }

            excludes = []
        }
    }
}

test {
    jacoco {
        enabled = true
        destinationFile = file("$buildDir/jacoco/${name}.exec")
        includes = []
        excludes += ["com/giggalpeople/backoffice/GiggalPeopleBackOfficeApplication.class",
                     "com/giggalpeople/backoffice/DiscordBotToken.class",
                     "com/giggalpeople/backoffice/chatops/**",
                     "com/giggalpeople/backoffice/common/**",
                     "com/giggalpeople/backoffice/api/common/constant/**",
                     "com/giggalpeople/backoffice/api/common/model/**",
                     "com/giggalpeople/backoffice/api/common/exception/**",
                     "com/giggalpeople/backoffice/api/config/**",
                     "com/giggalpeople/backoffice/api/crew/exception/**",
                     "com/giggalpeople/backoffice/api/crew/model/**",
                     "com/giggalpeople/backoffice/api/log/exception/**",
                     "com/giggalpeople/backoffice/api/log/model/**",
                     "com/giggalpeople/backoffice/api/server/exception/**",
                     "com/giggalpeople/backoffice/api/server/model/**",
                     "com/giggalpeople/backoffice/api/user/exception/**",
                     "com/giggalpeople/backoffice/api/user/model/**",
                     "com/giggalpeople/backoffice/api/user/request_info/model/**",
                     "com/giggalpeople/backoffice/api/crew/exception/**",
                     "com/giggalpeople/backoffice/api/webhook/**"]
        excludeClassLoaders = []
        includeNoLocationClasses = false
        sessionId = "<auto-generated value>"
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
}

//빌드 시 plain jar 파일 생성하지 않도록
jar {
    enabled = false
}

group = 'com.giggalpeople'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven {
            url 'https://jitpack.io'
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // MyBatis Junit Test를 위한 의존성
    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter-test
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3'

    // Test Code에서 Static Method 사용을 위한 의존성 추가
    testImplementation 'org.mockito:mockito-inline'

    // Data 암/복호화 의존성 추가
    implementation 'com.github.JunyHarang-Open-Source-project:Data-Aes-Secret:1.0.0b'

    // MyBatis Log를 찍기 위한 의존성 추가(https://mvnrepository.com/artifact/ch.qos.logback/logback-classic)
    testImplementation 'ch.qos.logback:logback-classic'

    //SpringDoc 의존성 추가
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'

    // 유효성 검사를 위한 의존성 추가
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // 패스워드 암호화를 위한 Spring Security Core 의존성 추가
    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt
    implementation 'org.mindrot:jbcrypt:0.4'

    // AOP 사용을 위한 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'

    // SQL query show
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // Discord Bot 사용을 위한 JDA 의존성
    implementation 'net.dv8tion:JDA:5.0.0-beta.5'

    // https://mvnrepository.com/artifact/org.json/json
    implementation 'org.json:json:20220924'

    // Goggle Json 관련 의존성 추가
    implementation 'com.google.code.gson:gson'

    // https://mvnrepository.com/artifact/org.springframework/spring-web-reactive
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // https://mvnrepository.com/artifact/io.netty/netty-resolver-dns-native-macos
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

    // https://mvnrepository.com/artifact/io.micrometer/micrometer-core
    implementation 'io.micrometer:micrometer-core'

    // Spring Batch 의존성 추가
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-batch
//    implementation 'org.springframework.boot:spring-boot-starter-batch'

}

check.dependsOn editorconfigCheck
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

//checkstyle 설정
checkstyle {
    // 분석 결과에서 예외 발생 시 빌드 실패 발생 제외
    ignoreFailures = true
    // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail
    // maxWarnings = 0
    configFile = file('config/checkstyle/naver-checkstyle-rules.xml') // 설정 파일 경로 지정
    configProperties = ["suppressionFile": "config/checkstyle/naver-checkstyle-suppressions.xml"]
    reportsDir = file("build/reports/checkstyle-output")
    // 낮은 버전 사용 시 깨지는 현상 발생. 설정 파일의 내용에 맞는 버전을 선택 필요
    toolVersion = "10.2"
    //지정 안해주면 빌드시 compileQuerydslJava 오류 발생
    sourceSets = [sourceSets.main]
    // 규칙 위반을 콘솔 표시 여부
    showViolations = true
}

checkstyleMain {
    reports {
        // Report File 위치 및 파일명 지정
        xml.destination = file("${checkstyle.reportsDir}/checkstyle-report.xml")
    }
}

sourceSets {
    main {
        java {
            // Project Directory 설정
            srcDirs = ['src/main/java']
        }
    }

    test {
        java {
            // 테스트 코드 디렉토리 설정
            srcDirs = ['src/test/java']
        }
    }
}
