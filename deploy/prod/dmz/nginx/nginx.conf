# 웹 프로스세 권한 제한을 위한 Nginx Deamon 소유자 nginx로 설정
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

# 로그 포맷 설정 (웹 서버의 로그 포맷을 Combined로 설정하지 않으면, 공격 가능 여부 파악, 공격 대상 사용 툴 파악, 공격 대상 위치 파악이 불가능하므로 반드시 Combined 포맷 또는 그에 준하는 포맷 스트링으로 설정)
    access_log  /var/log/nginx/access.log  combined;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # hide nginx version
    server_tokens off;

    #심볼릭 링크 제한
    disable_symlinks on;

    # File Upload & Download 제한
    client_max_body_size 20M;

    include /etc/nginx/conf.d/*.conf;

    # 운영 환경
    upstream prod-backend-nginx {
        #prod blue NGINX
        server 192.168.20.12:1000;
        #prod green NGINX
        server 192.168.20.12:1010;
    } # upstream prod-backend 끝

    server {
        listen 80;
        server_name 192.168.20.12;

        location / {
            proxy_http_version 1.1;
            proxy_pass http://prod-backend-nginx;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            # X-Frame-Options: 악의 적인 사용자가 본인의 사이트에 nginx server의 embedding 하는 것을 제한하는 방법입니다. - 클릭재킹 공격 기법 방어
            add_header X-Frame-Options "SAMEORIGIN";

            # X-XSS-Protection: 악의 적인 사용자가 본인의 사이트로 XSS 공격을 하는 것을 제한하는 방법입니다.
            add_header X-XSS-Protection "1; mode=block";

            proxy_connect_timeout 600;
            proxy_send_timeout 600;
            proxy_read_timeout 600;
            send_timeout 600;

            # 디렉터리 리스팅 취약점 제거
            autoindex off;
        }
    } # sever 끝
} #http 끝